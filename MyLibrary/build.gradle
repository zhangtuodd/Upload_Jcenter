apply plugin: 'com.android.library'

//配置插件
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'



android {
    compileSdkVersion 25
    buildToolsVersion "25.0.2"

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

    compile 'com.android.support:appcompat-v7:25.1.1'
    compile 'com.google.android.gms:play-services:+'
    compile 'org.apache.httpcomponents:httpclient:4.2.6'
    compile 'org.apache.httpcomponents:httpmime:4.2.6'
    testCompile 'junit:junit:4.12'
}



//********************************************************************************/

version = "1.0.0"    //这个是版本号，必须填写（怎么填不影响按这个格式）( 如果报这个错误Could not create version '1.0.0': HTTP/1.1 401。。。则是local.properties配置错误
def siteUrl = 'https://github.com/zhangtuodd/u' // 项目的主页
def gitUrl = 'https://github.com/zhangtuodd/u' // Git仓库的url

group = "com.example.mylibrary" // 这里是groupId ,必须填写  一般填你唯一的包名

install {
    repositories.mavenInstaller {
        // This generates POM.xml with proper parameters
        pom {
            project {
                packaging 'aar'
                // 项目描述，复制我的话，这里需要修改。
                name 'a tool'   //项目描述
                url siteUrl
                // 软件开源协议，现在一般都是Apache License2.0吧，复制我的，这里不需要修改。
                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                //填写开发者基本信息，复制我的，这里需要修改。
                developers {
                    developer {
                        id 'zhangtuodd'        //你公司的id，应该没什么影响
                        name 'zhangtuo'      //你的用户名，应该也没什么影响可以写bintray的用户名
                        email 'zhangtuodd@gmali.com' // 你的邮箱，没什么影响可以写bintray的邮箱地址
                    }
                }

                // SCM，复制我的，这里不需要修改。
                scm {
                    connection gitUrl
                    developerConnection gitUrl
                    url siteUrl
                }
            }
        }
    }
}
// 生成jar包的task，不需要修改。
task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}
// 生成javaDoc的jar，不需要修改
task javadoc(type: Javadoc) {
    options.encoding = "UTF-8"
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

//下面设置编码格式，重点注意，如果不设置可能会在gradlew install的时候出现GBK编码映射错误
javadoc {
    options {
        encoding "UTF-8"
        charSet 'UTF-8'
        author true
        version true
        links "http://docs.oracle.com/javase/7/docs/api"
        title 'my Library tool '   // 文档标题
    }
}

artifacts {
//    archives javadocJar
    archives sourcesJar
}

// 生成jar包
task releaseJar(type: Copy) {
    from( 'build/intermediates/bundles/release')
    into( '../jar')
    include('classes.jar')
    rename('classes.jar', 'okgo-' + version + '.jar')
}

// 这里是读取Bintray相关的信息，我们上传项目到github上的时候会把gradle文件传上去，
// 所以不要把帐号密码的信息直接写在这里，写在local.properties中，这里动态读取。
Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())
bintray {

    //读取 local.properties 文件里面的 bintray.user
    user = properties.getProperty("bintray.user")

    //读取 local.properties 文件里面的 bintray.apikey
    key = properties.getProperty("bintray.apikey")
    //local.properties格式：直接在文件里面添加下面
    // bintray.user=组织
    //bintray.apikey=平台里面有，在上面平台最终样式有指引

    configurations = ['archives']
    pkg {
        userOrg = "ztuo"        //JCenter的组织名，注意新版本的bintray是需要手动创建的
        repo = "FirstProject"    ////JCenter上的仓库名称，注意新版本的bintray是需要手动创建的
        // 发布到Bintray上的项目名字
        name = "FirstLibrary"
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = ["Apache-2.0"]
        publish = true  // 是否是公开项目
    }
}



//********************************************************************************/